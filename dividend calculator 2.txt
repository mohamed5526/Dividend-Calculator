<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Auto‑Fetch Dividend Calculator</title>
  <style>
    body { font-family: Arial, sans-serif; background: #f5f5f5; padding: 20px; }
    .calc { max-width: 500px; background: white; padding: 20px; border-radius: 10px; box-shadow: 0 0 10px rgba(0,0,0,0.1); margin: auto; }
    label { display: block; margin: 10px 0 5px; }
    input, select, button { width: 100%; padding: 10px; margin-bottom: 15px; border: 1px solid #ccc; border-radius: 5px; }
    button { background: #28a745; color: white; border: none; cursor: pointer; }
    .result { margin-top: 20px; font-weight: bold; }
  </style>
</head>
<body>
  <div class="calc">
    <h2>Dividend Income Calculator (Auto‑Fetch)</h2>
    <label for="ticker">Stock Ticker:</label>
    <input type="text" id="ticker" placeholder="e.g., AGNC">

    <label for="incomeGoal">Income Goal ($):</label>
    <input type="number" id="incomeGoal" placeholder="e.g., 100">

    <label for="period">Period:</label>
    <select id="period">
      <option value="monthly">Monthly</option>
      <option value="annual">Annual</option>
    </select>

    <button onclick="fetchDataAndCalculate()">Calculate</button>
    <div class="result" id="result"></div>
  </div>

  <script>
    async function fetchDataAndCalculate() {
      const ticker = document.getElementById('ticker').value.trim().toUpperCase();
      const incomeGoal = parseFloat(document.getElementById('incomeGoal').value);
      const period = document.getElementById('period').value;

      if (!ticker || isNaN(incomeGoal)) {
        return document.getElementById('result').innerText = 'Please enter valid ticker and income.';
      }

      try {
        const res = await fetch(`https://query1.finance.yahoo.com/v10/finance/quoteSummary/${ticker}?modules=price,summaryDetail`);
        const json = await res.json();
        const price = json.quoteSummary.result[0].price.regularMarketPrice;
        const yieldPct = json.quoteSummary.result[0].summaryDetail.dividendYield * 100;

        if (!price || !yieldPct) {
          throw 'No data';
        }

        const annualIncome = (period === 'monthly') ? incomeGoal * 12 : incomeGoal;
        const investment = annualIncome / (yieldPct / 100);
        const shares = investment / price;

        document.getElementById('result').innerHTML = `
          <strong>${ticker}</strong>: Price $${price.toFixed(2)}, Yield ${yieldPct.toFixed(2)}%<br>
          To earn $${incomeGoal.toFixed(2)} ${period}:<br>
          • Invest <strong>$${investment.toFixed(2)}</strong><br>
          • Own <strong>${Math.ceil(shares)}</strong> shares
        `;
      } catch (e) {
        document.getElementById('result').innerText = 'Failed to fetch stock data. Try again.';
      }
    }
  </script>
</body>
</html>
